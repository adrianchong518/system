(defcfg
  process-unmapped-keys yes
  block-unmapped-keys yes
  delegate-to-first-layer yes
  concurrent-tap-hold yes
)

(defsrc
  q    w    e    r    t    y    u    i    o    p
  a    s    d    f    g    h    j    k    l    ;
  ;; lsft z    x    c    v    n    m    ,    .    /
  z    x    c    v    b    n    m    ,    .    /
       lalt           spc            ralt
)

(deftemplate mod-tap (key mod)
  (tap-hold-release 150 175 $key $mod)
)

(defalias
  a (t! mod-tap a lmet)
  r (t! mod-tap r lalt)
  s (t! mod-tap s lsft)
  t (t! mod-tap t lctl)
  n (t! mod-tap n rctl)
  e (t! mod-tap e rsft)
  i (t! mod-tap i ralt)
  o (t! mod-tap o rmet)

  spc (tap-hold 150 200 spc (layer-while-held nav))

  bse (layer-switch base)
  sym (layer-switch sym)
  fn (layer-switch fn)
)

(deflayer base
  q    w    f    p    g    j    l    u    y    bspc
  @a   @r   @s   @t   d    h    @n   @e   @i   @o
  z    x    c    v    b    k    m    esc  tab  ret
       XX             @spc           @sym
)

(deflayer nav
  XX   mlft mmid mrgt XX   down rght 7    8    9
  lmet lalt lsft lctl XX   lft  XX   4    5    6
  XX   XX   XX   XX   XX   up   0    1    2    3
       XX             XX             XX
)

(defalias
  lbc S-[
  rbc S-]

  ! S-1
  @ S-2
  # S-3
  & S-5
  % S-7
  * S-8

  < S-,
  > S-.
  ? S-/

  ^ (t! mod-tap S-6 lmet)
  $ (t! mod-tap S-4 lalt)
  lpn (t! mod-tap S-9 lsft)
  rpn (t! mod-tap S-0 lctl)

  col (t! mod-tap S-; lctl)
  - (t! mod-tap - lsft)
  ' (t! mod-tap ' lalt)
  dqt (t! mod-tap S-' lmet)
)

(deflayer sym
  @<   @>   @lbc @rbc `    @*   =    S--  ;    bspc
  @^   @$   @lpn @rpn @@   \    @col @-   @'   @dqt
  @%   @&   [    ]    @#   @!   @?   ,    .    /
       @bse           @spc           @fn
)

(deflayer fn
  brdn brup vold vold mute del  f12  f7   f8   f9
  lmet lalt lsft lctl XX   XX   f11  f4   f5   f6
  lrld next pp   prev XX   XX   f10  f1   f2   f3
       @bse           @spc           @sym
)
